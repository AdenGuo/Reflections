When would you want to use a remote repository rather than keeping all your work local?
	I can access my program from any computer and any system. By doing so, I also can collaborate with other people 
	who are interesting in my work.
Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	It is mainly because that I sometimes may don't want to keep the changes in the remote repository. These commits may 
	not be done by myself or I would like to have some screen policy to make sure the commit to the project is neccessary. 
Describe the differences between forks, clones, and branches. When would you use one instead of another?
	Forks can only exist between repositories in GitHub. The main operation of forks is one-direction. After forking a 
	repository, one can make any changes which will not affect the original repository. If I would like to make some change 
	to others' repository without affecting original one. I would use forks. Clones can be used in local or in remote. It 
	is like operation of copy. When I want to make a repository local and so a little development around the prorgam. I 
	would use clone. Branches only exist in one repository. It mean different methods of solving same question. If i am 
	about to try a new idea on existing program based on what have done in that program. I would develop a new branch 
	in this repository.
What is the benefit of having a copy of the last known state of the remote stored locally?
	I think through the last known state of the remote, one can easily check out the differences between local and remote 
	repositories. And also the fetch action will create a new branch based on the known status of the remote repository in 
	the local. So the known state of the remote in local is neccessary.
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	I would copy file around and do a tedious document for what I have done. The git and github make collaboration easier. 